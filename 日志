06/04 18:56:22
express-4rxw-005
    at async init (/app/db.js:25:3)
06/04 18:56:22
express-4rxw-005
    at async Function.sync (/app/node_modules/sequelize/lib/model.js:939:21)
06/04 18:56:22
express-4rxw-005
    at async MySQLQueryInterface.tableExists (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:102:17)
06/04 18:56:22
express-4rxw-005
    at async /app/node_modules/sequelize/lib/sequelize.js:305:26
06/04 18:56:22
express-4rxw-005
    at async ConnectionManager.getConnection (/app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
06/04 18:56:22
express-4rxw-005
    at async /app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
06/04 18:56:22
express-4rxw-005
    at async ConnectionManager._connect (/app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)
06/04 18:56:22
express-4rxw-005
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
06/04 18:56:22
express-4rxw-005
    at ConnectionManager.connect (/app/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:94:17)
06/04 18:56:22
express-4rxw-005
(node:38) UnhandledPromiseRejectionWarning: SequelizeAccessDeniedError: Access denied for user 'root'@'10.33.21.67' (using password: YES)
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download Downloading https://binaries.prisma.sh/all_commits/81e4af48011447c3cc503a190e86995b66d2a28e/debian-openssl-3.0.x/libquery_engine.so.node.gz to /app/node_modules/@prisma/engines/libquery_engine-debian-openssl-3.0.x.so.node ... +34ms
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download Downloading https://binaries.prisma.sh/all_commits/81e4af48011447c3cc503a190e86995b66d2a28e/debian-openssl-3.0.x/schema-engine.gz to /app/node_modules/@prisma/engines/schema-engine-debian-openssl-3.0.x ... +1ms
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download https://binaries.prisma.sh/all_commits/81e4af48011447c3cc503a190e86995b66d2a28e/debian-openssl-3.0.x/libquery_engine.so.node.gz will be downloaded to /app/node_modules/@prisma/engines/libquery_engine-debian-openssl-3.0.x.so.node +0ms
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download https://binaries.prisma.sh/all_commits/81e4af48011447c3cc503a190e86995b66d2a28e/debian-openssl-3.0.x/schema-engine.gz will be downloaded to /app/node_modules/@prisma/engines/schema-engine-debian-openssl-3.0.x +1ms
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download file /app/node_modules/@prisma/engines/libquery_engine-debian-openssl-3.0.x.so.node does not exist and must be downloaded +0ms
06/04 18:56:22
express-4rxw-014
prisma:fetch-engine:download file /app/node_modules/@prisma/engines/schema-engine-debian-openssl-3.0.x does not exist and must be downloaded +2ms
06/04 18:56:22
express-4rxw-014
prisma:get-platform The parsed libssl version is: 3.0.x +0ms
06/04 18:56:22
express-4rxw-014
prisma:get-platform Found libssl.so file using platform-specific paths: libssl.so.3 +42ms
06/04 18:56:22
express-4rxw-014
prisma:get-platform Trying platform-specific paths for "debian" (and "ubuntu") +0ms
06/04 18:56:22
express-4rxw-014
} +2ms
06/04 18:56:22
express-4rxw-014
  "originalDistro": "debian"
06/04 18:56:22
express-4rxw-014
  "familyDistro": "debian",
06/04 18:56:22
express-4rxw-014
  "targetDistro": "debian",
06/04 18:56:22
express-4rxw-014
{
06/04 18:56:22
express-4rxw-014
prisma:get-platform Found distro info:
06/04 18:56:22
express-4rxw-014
prisma:engines binaries to download schema-engine, libquery-engine +655ms
06/04 18:56:22
express-4rxw-014
prisma:cli Failed to read schema information. Using default values: '{\n  "name": "GetConfigError"\n}' +11ms
06/04 18:56:22
express-4rxw-014
prisma:getConfig Using getConfig Wasm +1ms
06/04 18:56:22
express-4rxw-014
prisma:getSchema Reading schema from single file /app/prisma/schema.prisma +0ms
06/04 18:56:22
express-4rxw-014
prisma:getSchema Checking existence of /app/prisma/schema.prisma +0ms
06/04 18:56:22
express-4rxw-014
prisma:getSchema Reading schema from single file /app/schema.prisma +0ms
06/04 18:56:22
express-4rxw-014
prisma:getSchema Checking existence of /app/schema.prisma +0ms
06/04 18:56:22
express-4rxw-014
} +6ms
06/04 18:56:22
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:22
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:22
express-4rxw-014
prisma:config:loadConfigFromFile No config file found in the current working directory /app +188ms
06/04 18:56:22
express-4rxw-014
prisma:cli:bin Failed to initialize the command state: Error: ENOENT: no such file or directory, open '/root/.config/prisma-nodejs/commands.json' +688ms
06/04 18:56:22
express-4rxw-005
(node:38) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
06/04 18:56:22
express-4rxw-005
(node:38) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)
06/04 18:56:22
express-4rxw-005
(Use `node --trace-warnings ...` to show where the warning was created)
06/04 18:56:22
express-4rxw-005
    at async bootstrap (/app/index.js:55:3)
06/04 18:56:26
express-4rxw-014
prisma:schemaEngine:rpc SENDING RPC CALL {"id":1,"jsonrpc":"2.0","method":"schemaPush","params":{"force":true,"schema":{"files":[{"path":"/app/prisma/schema.prisma","content":"// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                      Int      @id @default(autoincrement())\n  phone                   String   @unique @db.VarChar(20)\n  membershipType          String   @default(\"free\") @db.VarChar(50)\n  membershipExpiryDate    DateTime?\n  dailyExportCount        Int      @default(0)\n  dailyExportCountResetDate DateTime @default(now())\n  createdAt              DateTime @default(now())\n  updatedAt              DateTime @updatedAt\n  paymentIntents         PaymentIntent[]\n\n  @@map(\"users\")\n}\n\nmodel PaymentIntent {\n  id                  Int      @id @default(autoincrement())\n  outTradeNo          String   @unique @db.VarChar(255)\n  userId              Int\n  membershipType      String   @db.VarChar(50)\n  amount              Int\n  status              String   @default(\"pending\") @db.VarChar(50)\n  error               String?  @db.Text\n  wechatTransactionId String?  @db.VarChar(255)\n  paidAt              DateTime?\n  createdAt           DateTime @default(now())\n  updatedAt           DateTime @updatedAt\n  user                User     @relation(fields: [userId], references: [id])\n\n  @@map(\"payment_intents\")\n}\n"}]}}} +3ms
06/04 18:56:26
express-4rxw-014
prisma:schemaEngine:rpc starting Schema engine with binary: /app/node_modules/@prisma/engines/schema-engine-debian-openssl-3.0.x +25ms
06/04 18:56:26
express-4rxw-014
Datasource "db": MySQL database "nodejs_demo" at "10.33.107.181:3306"
06/04 18:56:26
express-4rxw-014
prisma:getConfig config data retrieved without errors in getConfig Wasm +1ms
06/04 18:56:26
express-4rxw-014
prisma:getConfig Using getConfig Wasm +1ms
06/04 18:56:26
express-4rxw-014
Prisma schema loaded from prisma/schema.prisma
06/04 18:56:26
express-4rxw-014
prisma:getSchema Reading schema from single file /app/prisma/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
prisma:getSchema Checking existence of /app/prisma/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
prisma:getSchema Reading schema from single file /app/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
prisma:getSchema Checking existence of /app/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
} +2ms
06/04 18:56:26
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:26
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:26
express-4rxw-014
Environment variables loaded from .env
06/04 18:56:26
express-4rxw-014
prisma:tryLoadEnv Environment variables loaded from /app/.env +0ms
06/04 18:56:26
express-4rxw-014
} +1ms
06/04 18:56:26
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:26
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:26
express-4rxw-014
prisma:loadEnv project root found at /app/package.json +3427ms
06/04 18:56:26
express-4rxw-014
prisma:getSchema Checking existence of /app/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
} +0ms
06/04 18:56:26
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:26
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:26
express-4rxw-014
prisma:getSchema Reading schema from single file /app/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
prisma:getSchema Checking existence of /app/schema.prisma +0ms
06/04 18:56:26
express-4rxw-014
} +1ms
06/04 18:56:26
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:26
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:26
express-4rxw-014
prisma:cli:bin Execution time for executing "await cli.parse(commandArray)": 3970.224616 ms +78ms
06/04 18:56:26
express-4rxw-014
AGâœ” Generated Prisma Client (v6.9.0) to ./node_modules/@prisma/client in 76ms
06/04 18:56:26
express-4rxw-014
AGRunning generate... - Prisma Client
06/04 18:56:26
express-4rxw-014
} +106ms
06/04 18:56:26
express-4rxw-014
  }
06/04 18:56:26
express-4rxw-014
    }
06/04 18:56:26
express-4rxw-014
      "debian-openssl-3.0.x": "/app/node_modules/prisma/libquery_engine-debian-openssl-3.0.x.so.node"
06/04 18:56:26
express-4rxw-014
    "libqueryEngine": {
06/04 18:56:26
express-4rxw-014
  "generatorBinaryPaths": {
06/04 18:56:26
express-4rxw-014
prisma:getGenerators {
06/04 18:56:26
express-4rxw-014
} +1ms
06/04 18:56:26
express-4rxw-014
  }
06/04 18:56:26
express-4rxw-014
    ]
06/04 18:56:26
express-4rxw-014
      }
06/04 18:56:26
express-4rxw-014
        "native": true
06/04 18:56:26
express-4rxw-014
        "value": "debian-openssl-3.0.x",
06/04 18:56:26
express-4rxw-014
        "fromEnvVar": null,
06/04 18:56:26
express-4rxw-014
      {
06/04 18:56:26
express-4rxw-014
    "binaryTargets": [
06/04 18:56:26
express-4rxw-014
    ],
06/04 18:56:26
express-4rxw-014
libqueryEngine
06/04 18:56:26
express-4rxw-014
    "engines": [
06/04 18:56:26
express-4rxw-014
  "81e4af48011447c3cc503a190e86995b66d2a28e": {
06/04 18:56:26
express-4rxw-014
prisma:getGenerators neededVersions {
06/04 18:56:26
express-4rxw-014
} +8ms
06/04 18:56:26
express-4rxw-014
  "packagePath": "/app/package.json"
06/04 18:56:26
express-4rxw-014
prisma:getSchema prismaConfig {
06/04 18:56:26
express-4rxw-014
prisma:loadEnv project root found at /app/node_modules/@prisma/client/package.json +3ms
06/04 18:56:26
express-4rxw-014
prisma:mergeSchemas Using mergeSchemas Wasm +0ms
06/04 18:56:26
express-4rxw-014
prisma:generator baseDir /app/prisma +0ms
06/04 18:56:26
express-4rxw-014
